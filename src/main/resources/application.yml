server:
  port: 8123
  servlet:
    context-path: /api
spring:
  application:
    name: yanyu-picture-backend
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/yanyu_picture
    username: root
    password: 20040301
  redis:
    host: 192.168.14.128
    port: 6379
    password: 20040301
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        time-between-eviction-runs: 10s
  # session配置
  session:
    store-type: redis
    # session30天过期
    timeout: 2592000
  # 设置上传图片的最大大小
  servlet:
    multipart:
      max-file-size: 10MB
  # 空间图片分表
  shardingsphere:
    datasource:
      names: yanyu_picture
      yanyu_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yanyu_picture
        username: root
        password: 20040301
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: yanyu_picture.picture  # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.ityanyu.yanyupicturebackend.manager.sharding.PictureShardingAlgorithm
    props:
      #显示修改后的sql
      sql-show: true
mybatis-plus:
  configuration:
    #mybatis配置
    map-underscore-to-camel-case: false # 是否开启驼峰和下划线的映射
    #仅在开发环境打印日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  #逻辑删除
  global-config:
    db-config:
      logic-delete-field: isDelete #全局逻辑删除的实体字段
      logic-delete-value: 1 #逻辑已删除（默认为 1）
      logic-not-delete-value: 0 #逻辑未删除（默认为 0）
    # sqlRunner
    enable-sql-runner: true
#接口文档配置
knife4j:
  enable: true
  openapi:
    title: 接口文档
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.ityanyu.yanyupicturebackend.controller

# 对象存储配置（需要从腾讯云获取）
#cos:
#  client:
#    host: xxx
#    secretId: xxx
#    secretKey: xxx
#    region: xxx
#    bucket: xxx

# 阿里云 AI 配置
#aliYunAi:
#  apiKey: xxxx
